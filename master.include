#!/bin/bash

declare -gA MASTER_IMPORT

#echo "$BASH_SOURCE"
#echo "$(readlink -f $BASH_SOURCE)"
#echo "$(dirname $(readlink -f $BASH_SOURCE))"

function master_setup()
{
	#echo "\$0=$0"
	#echo "\$BASH_SOURCE=$BASH_SOURCE"
	#echo "dirname \$BASH_SOURCE=$(dirname $BASH_SOURCE)"
	#echo "$(cd $(dirname $BASH_SOURCE);pwd)"
	local moduledir="$(cd $(dirname $BASH_SOURCE);pwd)/modules"
	
	. "${moduledir}/logging.include"	|| { echo "FATAL : impossibile caricare prerequisito  ${moduledir}/logging.include";	return 1; }
	. "${moduledir}/hash.include"		|| { echo "FATAL : impossibile caricare prerequisito  ${moduledir}/hash.include";		return 2; }
	. "${moduledir}/lib.include"		|| { echo "FATAL : impossibile caricare prerequisito  ${moduledir}/lib.include";		return 3; }
}
master_setup || exit $?
#
#	helper di include scripts
#
function module_load()
{
	local moduledir="$(cd $(dirname $BASH_SOURCE);pwd)/modules"
	local modulepath="$1"
	#
	#	inutile procedere se file non esiste
	#
	try "check esistenza $modulepath"
	if [ ! -f "$modulepath" ]
	then
		warn "file inesistente: $modulepath"
		modulepath="${moduledir}/${modulepath}"
		warn "tento con : ${modulepath}"
		#
		#	fallback
		#
		[ -f "$modulepath" ] || {
			fatal "file inesistente: $modulepath"
			fatal "impossibile continuare"
			exit 1
		}
	fi
	success "file trovato: $modulepath"
	#
	#	comincio a visualizzare cosa intendo caricare senza andare a capo
	#
	try "caricamento ${modulepath##*/}..."
	. "$modulepath" &> /dev/null || {
		# visualizzo FAIL Di seguito
		#echo "FAIL"
		fatal "impossibile eseguire sourcing ${modulepath##*/}"
		fatal "termino script"
		exit 2
	}
	#	visualizzo success di seguito
	success "file caricato : $modulepath"
}

#function module_load()
#{
#	[ $# -ge 1 ] || { echo "ERROR | sintassi $FUNCNAME nomefile|pathfile [ dir ]";	exit 1; }
#	
#	local filename dirname path
#
#	if [ $# -eq 1 ]
#	then
#		dirname="$(dirname $(readlink -f $BASH_SOURCE))/modules"
#		filename="$(basename "$1")"
#		path="$dirname/$filename"
#	else
#		dirname="$2"
#		filename="$(basename "$1")"
#		path="$dirname/$filename"
#	fi
#	
#	if [ "${MASTER_IMPORT[$filename]}" == "$dirname" ]
#	then
#		warn "$path already sourced, skip"
#		return 0
#	fi
#	
#	[ -f "$path" ] || { echo "ERROR | $FUNCNAME | $path non trovato";	return 2; }
#	
#	. "$path" || { echo "ERROR | $FUNCNAME | errore durante il caricamento di $path";	return 2; }
#	
#	MASTER_IMPORT["$filename"]="$dirname"
#}

function import_dump()
{
	local filename dirname path
	
	for filename in "${!MASTER_IMPORT[@]}"
	do
		dirname="${MASTER_IMPORT[$filename]}"
		path="$dirname/$filename"
		info "$path"
	done
}

module_load logging.include
module_load hash.include
module_load lib.include
#module_load ciao

import_dump
