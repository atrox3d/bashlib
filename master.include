#!/bin/bash

declare -gA MASTER_IMPORT

#echo "$BASH_SOURCE"
#echo "$(readlink -f $BASH_SOURCE)"
#echo "$(dirname $(readlink -f $BASH_SOURCE))"
function master_setup()
{
	#echo "\$0=$0"
	#echo "\$BASH_SOURCE=$BASH_SOURCE"
	#echo "dirname \$BASH_SOURCE=$(dirname $BASH_SOURCE)"
	#echo "$(cd $(dirname $BASH_SOURCE);pwd)"
	local moduledir="$(cd $(dirname $BASH_SOURCE);pwd)/modules"
	
	. "${moduledir}/logging.include"	|| { echo "FATAL : impossibile caricare prerequisito  ${moduledir}/logging.include";	return 1; }
	. "${moduledir}/hash.include"		|| { echo "FATAL : impossibile caricare prerequisito  ${moduledir}/hash.include";		return 2; }
	. "${moduledir}/lib.include"		|| { echo "FATAL : impossibile caricare prerequisito  ${moduledir}/lib.include";		return 3; }
	hash_addelement MASTER_IMPORT logging.include	"${moduledir}"
	hash_addelement MASTER_IMPORT hash.include		"${moduledir}"
	hash_addelement MASTER_IMPORT lib.include		"${moduledir}"
}
#
#	ci assicuriamo che le librerie di base siano caricate
#
master_setup || exit $?
#
#	helper di include scripts
#
function module_load()
{
	local moduledir="$(cd $(dirname $BASH_SOURCE);pwd)/modules"
	local modulepath="$1"
	local modulename="${modulepath##*/}"

	if hash_haselement MASTER_IMPORT "$modulename"
	then
		warn "file gia' caricato: $modulename"
		return 0
	fi

	#
	#	inutile procedere se file non esiste
	#
	try "check esistenza $modulepath"
	if [ ! -f "$modulepath" ]
	then
		warn "file inesistente: $modulepath"
		modulepath="${moduledir}/${modulepath}"
		warn "tento con : ${modulepath}"
		#
		#	fallback su modules/
		#
		[ -f "$modulepath" ] || {
			fatal "file inesistente: $modulepath"
			fatal "impossibile continuare"
			exit 1
		}
	else
		# estrazione path
		moduledir="${modulepath%/*}"
	fi
	success "file trovato: $modulepath"
	
	#
	#	comincio a visualizzare cosa intendo caricare senza andare a capo
	#
	try "caricamento ${modulepath##*/}..."
	. "$modulepath" &> /dev/null || {
		fatal "impossibile eseguire sourcing ${modulepath##*/}"
		fatal "termino script"
		exit 2
	}
	hash_addelement MASTER_IMPORT "$modulename" "${moduledir}"
	success "file caricato : $modulepath"
}

function import_dump()
{
	local filename dirname path
	
	for filename in "${!MASTER_IMPORT[@]}"
	do
		dirname="${MASTER_IMPORT[$filename]}"
		info "$filename $dirname"
	done
}
#
module_load logging.include
module_load hash.include
module_load lib.include

import_dump
